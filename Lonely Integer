#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'lonelyinteger' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY a as parameter.
#

def lonelyinteger(a): # a is an array
    if (n < 1 or n >= 100) and n % 2 == 1:
        print("Error.")
        quit()
    for i in range(0,n):
        if 0 > a[i] or 100 < a[i]:
            print("Error.")
            quit()
    counts = dict()
    for number in a:
        if number not in counts:
            counts[number] = 1 # the key "number" (in the array or list a) gets assigned a value = 1.
        else:
            counts[number] = counts[number] + 1
    for key in counts: # iterate through each key in the counts dictionary.
            if counts[key] != 1:
                continue
            else:
                unique_int = key
    return unique_int
        

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    a = list(map(int, input().rstrip().split()))

    result = lonelyinteger(a)

    fptr.write(str(result) + '\n')

    fptr.close()

    
    
UPDATED:
    
 def lonelyinteger(a):
    count = dict()
    
    # Get counts
    for numb in a:
        count[numb] = count.get(numb,0) + 1
        
    # Retrieve key that contains a count of 1
    for key in count.keys():
        if count[key] == 1:
            return key
